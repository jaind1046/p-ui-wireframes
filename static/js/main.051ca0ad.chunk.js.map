{"version":3,"sources":["components/SplashScreen/SplashScreen.module.scss","components/Main/Main.module.scss","components/GlasswallModal/GlasswallModal.module.scss","components/GlasswallNav/Nav/Nav.module.scss","components/GlasswallNav/NavBar/NavBar.module.scss","views/SplashScreenView/SplashScreenView.module.scss","components/Auth/Form/Form.module.scss","components/GlasswallNav/NavButton/NavButton.module.scss","components/GlasswallNav/ExpandButton/ExpandButton.module.scss","components/common/Modal/Modal.module.scss","components/Auth/Login/Login.module.scss","App.module.scss","components/GlasswallLogo/GlasswallLogo.module.scss","components/GlasswallNav/NavSpacer/NavSpacer.module.scss","components/UI/Button/Button.module.scss","assets/user-icon.svg","assets/password-icon.svg","components/GlasswallLogo/GlasswallLogo.tsx","components/GlasswallNav/NavBar/NavBar.tsx","components/GlasswallNav/Nav/Nav.tsx","components/GlasswallNav/NavButton/NavButton.tsx","components/GlasswallNav/ExpandButton/ExpandButton.tsx","components/GlasswallNav/NavSpacer/NavSpacer.tsx","components/Main/Main.tsx","components/SplashScreen/SplashScreen.tsx","views/SplashScreenView/SplashScreenView.tsx","components/common/Events/ClickHandler.tsx","components/common/Modal/Modal.tsx","components/GlasswallModal/Header.tsx","components/GlasswallModal/Body.tsx","components/GlasswallModal/CloseButton.tsx","components/GlasswallModal/GlasswallModal.tsx","components/UI/Button/Button.jsx","components/Auth/Form/Form.jsx","components/Auth/Login/Login.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","GlasswallLogo","props","className","styles","defaultLogo","style","background","data-testid","NavBar","navBar","expanded","logo","children","Nav","nav","menuExpanded","bottom","scrollContainer","NavButton","button","selected","onClick","clickHandler","ExpandButton","NavSpacer","spacer","Main","showTitle","undefined","title","console","error","pageHeading","main","content","SplashScreen","splashContainer","logoContainer","headingContainer","heading","subHeading","childContainer","SplashScreenView","link","hideSplashScreen","href","target","rel","paddingTop","ClickHandler","ref","useRef","useCallback","event","current","contains","onClickOutside","onClickInside","useEffect","document","body","addEventListener","removeEventListener","defaultProps","ModalContents","overlay","container","Modal","modalRoot","querySelector","ReactDOM","createPortal","CSSTransition","in","isOpen","classNames","timeout","transitionTimeout","unmountOnExit","onExited","onExitCallback","Fragment","Header","header","Body","CloseButton","closeAction","tabIndex","type","close","GlasswallModal","onCloseAction","Button","onButtonClick","buttonId","buttonType","classes","id","Form","useState","emailValue","setEmailValue","passValue","setPassValue","form","onSubmit","evt","preventDefault","log","htmlFor","name","placeholder","backgroundImage","iconUser","value","onChange","iconPass","linkTerms","rePassLink","login","App","showSplashScreen","setShowSplashScreen","navExpanded","setNavExpanded","modalIsOpen","setModalIsOpen","loginPageIsOpen","setLoginPageIsOpen","app","mainContainer","Login","to","exact","path","Boolean","window","location","hostname","match","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.051ca0ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"splashContainer\":\"SplashScreen_splashContainer__2Y4yr\",\"logoContainer\":\"SplashScreen_logoContainer__29gQW\",\"logo\":\"SplashScreen_logo__3OwCB\",\"headingContainer\":\"SplashScreen_headingContainer__v-bcb\",\"heading\":\"SplashScreen_heading__2NS4o\",\"subHeading\":\"SplashScreen_subHeading__1DFgo\",\"childContainer\":\"SplashScreen_childContainer__32GZC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeading\":\"Main_pageHeading__xxdMP\",\"expanded\":\"Main_expanded__16UNz\",\"main\":\"Main_main__3JhNz\",\"showTitle\":\"Main_showTitle__25ULg\",\"content\":\"Main_content__2K0G4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"GlasswallModal_header__NdAT1\",\"body\":\"GlasswallModal_body__E3sDJ\",\"close\":\"GlasswallModal_close__2AKYr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollContainer\":\"Nav_scrollContainer__2er9V\",\"navBar\":\"Nav_navBar__2TP14\",\"nav\":\"Nav_nav__2YH2E\",\"menuExpanded\":\"Nav_menuExpanded__11k3t\",\"bottom\":\"Nav_bottom__1tQJK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__1yc5g\",\"expanded\":\"NavBar_expanded__3ri0A\",\"loading\":\"NavBar_loading__2lKsx\",\"logo\":\"NavBar_logo__1tBWK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SplashScreenView_button__376p9\",\"link\":\"SplashScreenView_link__32B-5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__u6AjU\",\"linkTerms\":\"Form_linkTerms__2ydmj\",\"rePassLink\":\"Form_rePassLink__3O9v2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"NavButton_button__2iIw2\",\"selected\":\"NavButton_selected__2nXkc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ExpandButton_button__1IiX7\",\"expanded\":\"ExpandButton_expanded__5-TMH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__3KvTv\",\"container\":\"Modal_container__1el9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__3tIk1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"mainContainer\":\"App_mainContainer__3GtbL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultLogo\":\"GlasswallLogo_defaultLogo__ZK8A_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spacer\":\"NavSpacer_spacer__8nqqV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__32FwK\"};","module.exports = __webpack_public_path__ + \"static/media/user-icon.ca13a95d.svg\";","module.exports = __webpack_public_path__ + \"static/media/password-icon.1c396cc4.svg\";","import React from \"react\";\n\nimport styles from \"./GlasswallLogo.module.scss\";\n\nexport interface GlasswallLogoProps { className?: string }\n\nconst GlasswallLogo = (props: GlasswallLogoProps) => {\n    return (\n        <div className={props.className ? props.className : styles.defaultLogo}\n            style={{ background: `url(\"data:image/svg+xml,%3Csvg viewBox='0 0 254.33 147' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23fff'%3E%3Cpath d='M163.81 93.12l-15.86 49.22h2.92l15.87-49.22zM179.01 55.02l15.71-48.74h-2.92l-15.71 48.74zM4.13 74.11v-.08C4.13 66.32 10.14 60 18.36 60c4.89 0 7.83 1.32 10.66 3.72l-3.76 4.54c-2.09-1.74-3.96-2.75-7.1-2.75-4.34 0-7.79 3.84-7.79 8.45v.08c0 4.96 3.41 8.61 8.22 8.61 2.17 0 4.11-.54 5.62-1.63v-3.88H18.2v-5.16h11.79v11.79c-2.79 2.37-6.63 4.3-11.59 4.3-8.45 0-14.27-5.93-14.27-13.96zM34.52 60.46h5.97v21.71h13.53v5.43h-19.5zM69.06 60.27h5.5L86.19 87.6h-6.24l-2.48-6.09H65.99l-2.48 6.09h-6.09zm6.28 15.97l-3.6-8.8-3.61 8.8zM88.14 83.65l3.53-4.23c2.44 2.02 5 3.3 8.1 3.3 2.44 0 3.92-.97 3.92-2.56v-.08c0-1.51-.93-2.29-5.47-3.45-5.47-1.4-9-2.91-9-8.3v-.08c0-4.92 3.95-8.18 9.5-8.18 3.95 0 7.33 1.24 10.08 3.45l-3.1 4.5c-2.4-1.67-4.77-2.68-7.06-2.68s-3.49 1.05-3.49 2.36v.08c0 1.79 1.16 2.37 5.85 3.57 5.51 1.43 8.61 3.41 8.61 8.14v.08c0 5.39-4.11 8.41-9.97 8.41-4.09.01-8.24-1.42-11.5-4.33zM112.29 83.65l3.53-4.23c2.44 2.02 5 3.3 8.1 3.3 2.44 0 3.92-.97 3.92-2.56v-.08c0-1.51-.93-2.29-5.47-3.45-5.47-1.4-9-2.91-9-8.3v-.08c0-4.92 3.95-8.18 9.5-8.18 3.95 0 7.33 1.24 10.08 3.45l-3.1 4.5c-2.4-1.67-4.77-2.68-7.06-2.68s-3.49 1.05-3.49 2.36v.08c0 1.79 1.16 2.37 5.85 3.57 5.51 1.43 8.61 3.41 8.61 8.14v.08c0 5.39-4.11 8.41-9.97 8.41-4.09.01-8.24-1.42-11.5-4.33zM156.56 60.38h2.52l7.44 22.68 7.76-22.6h3.22l-9.69 27.34h-2.6l-7.44-22.03-7.48 22.03h-2.56l-9.69-27.34h3.33l7.76 22.6zM202.29 87.6H199l-3.18-7.17h-14.77l-3.22 7.17h-3.14l12.37-27.33h2.87zm-13.84-23.76l-6.21 13.84h12.37zM207.09 60.46h3.06v24.31h15.28v2.83h-18.34zM230.24 60.46h3.06v24.31h15.28v2.83h-18.34z'/%3E%3C/g%3E%3C/svg%3E\") no-repeat center center` }}\n            data-testid=\"logoDiv\"></div>\n    );\n};\n\nexport default GlasswallLogo;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport GlasswallLogo from \"../../GlasswallLogo/GlasswallLogo\";\n\nimport styles from \"./NavBar.module.scss\";\n\nexport interface NavBarProps { logo: boolean, expanded: boolean, children: React.ReactNode }\n\nconst NavBar = (props: NavBarProps) => {\n\n    return (\n        <div className={`${styles.navBar} ${props.expanded ? styles.expanded : \"\"}`}>\n            {props.logo &&\n                <GlasswallLogo className={styles.logo} />\n            }\n\n            {props.children}\n\n        </div>\n    );\n};\n\nNavBar.propTypes = {\n    logo: PropTypes.bool\n};\n\nexport { NavBar };","import React from \"react\";\n\nimport styles from \"./Nav.module.scss\";\n\nexport interface NavProps { expanded: boolean, bottom: boolean, children?: React.ReactNode }\n\nexport type Nav = NavProps;\n\nconst Nav = (props: NavProps) => {\n    return (\n        <nav className={`${styles.nav} ${props.expanded ? styles.menuExpanded : \"\"} ${props.bottom ? styles.bottom : \"\"}`}>\n            <div className={styles.scrollContainer}>\n                <ul>\n                    {props.children}\n                </ul>\n            </div>\n        </nav>\n    );\n};\n\nexport { Nav };","import React from \"react\";\nimport styles from \"./NavButton.module.scss\";\n\nexport interface NavButtonProps { selected: boolean, clickHandler?: Function, children?: React.ReactNode }\n\nfunction NavButton(props: NavButtonProps) {\n    return (\n        <li>\n            <button\n                className={`${styles.button} ${props.selected ? styles.selected : \"\"}`}\n                onClick={() => props.clickHandler && props.clickHandler()}>{props.children}</button>\n        </li>\n    );\n}\n\nexport { NavButton };","import React from \"react\";\n\nimport styles from \"./ExpandButton.module.scss\";\n\nexport interface ExpandButtonProps { expanded: boolean, clickHandler: Function }\n\nfunction ExpandButton(props: ExpandButtonProps) {\n    return (\n        <button className={`${styles.button}  ${props.expanded ? styles.expanded : \"\"}`} onClick={() => props.clickHandler()}></button>\n    );\n}\n\nexport { ExpandButton };","import React from \"react\";\n\nimport styles from \"./NavSpacer.module.scss\";\n\nconst NavSpacer = () => {\n    return (\n        <li>\n            <div className={styles.spacer}></div>\n        </li>\n    );\n};\n\nexport { NavSpacer };","import React from \"react\";\n\nimport styles from \"./Main.module.scss\";\n\nexport interface MainProps {\n    expanded: boolean,\n    showTitle: boolean,\n    title?: string,\n    children: React.ReactNode\n}\n\nconst Main = (props: MainProps) => {\n\n    if (props.showTitle && (props.title === undefined || props.title === null)) {\n        console.error(\"showTitle is set to true, but no title was supplied to <Main>.\");\n    }\n\n    return (\n        <>\n            {props.showTitle &&\n                <h1 className={`${styles.pageHeading} ${props.expanded ? styles.expanded : \"\"}`}>\n                    {props.title}\n                </h1>\n            }\n\n            <div className={`${styles.main} ${props.expanded ? styles.expanded : \"\"} ${props.showTitle ? styles.showTitle : \"\"}`}>\n\n                <div className={styles.content}>\n                    {props.children}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Main;","import React from \"react\";\n\nimport GlasswallLogo from \"../GlasswallLogo/GlasswallLogo\";\n\nimport styles from \"./SplashScreen.module.scss\";\n\nexport interface SplashScreenProps { heading: string; subHeading?: string; children?: React.ReactNode; }\n\nconst SplashScreen = (props: SplashScreenProps) => {\n    return (\n        <div className={styles.splashContainer} data-testid=\"splashContainerDiv\">\n            <div className={styles.logoContainer} data-testid=\"logoContainerDiv\">\n                <GlasswallLogo className={styles.logo} />\n            </div>\n\n            <div className={styles.headingContainer} data-testid=\"headingContainerDiv\">\n                <h1 className={styles.heading}>{props.heading}</h1>\n                {props.subHeading &&\n                    <h2 className={styles.subHeading}>{props.subHeading}</h2>\n                }\n                <div className={styles.childContainer} data-testid=\"childContainerDiv\">\n                    {props.children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SplashScreen;\n","import React from \"react\";\n\nimport SplashScreen from \"../../components/SplashScreen/SplashScreen\";\n\nimport styles from \"./SplashScreenView.module.scss\";\n\nexport interface SplashScreenViewProps { hideSplashScreen: Function }\n\nconst SplashScreenView = (props: SplashScreenViewProps) => {\n    return (\n        <SplashScreen heading=\"Glasswall React App\" subHeading=\"Edit src/App.jsx and save to reload.\">\n            <div>\n                <p className={styles.link}\n                    onClick={() => props.hideSplashScreen()}>Click here to hide the Splash Screen.</p>\n            </div>\n\n            <div>\n                <a className={styles.link}\n                    href=\"https://filetrust.github.io/frontend/\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">Styleguide</a>\n            </div>\n\n            <div style={{ paddingTop: \"1rem\" }}>\n                <a className={styles.link}\n                    href=\"https://github.com/filetrust/glasswall-react-app\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">Github</a>\n            </div>\n        </SplashScreen>\n    );\n};\n\nexport default SplashScreenView;","import React, { useRef, useEffect, useCallback } from \"react\";\n\nexport interface ClickHandlerProps { onClickInside: Function, onClickOutside: Function, children: React.ReactNode}\n\nconst ClickHandler = (props: ClickHandlerProps) => {\n    const ref = useRef<HTMLDivElement>(null);\n\n    const onClick = useCallback((event) => {\n        if (ref.current && !ref.current.contains(event.target)) {\n            props.onClickOutside(event);\n        }\n        else {\n            props.onClickInside(event);\n        }\n    }, [props]);\n\n    useEffect(() => {\n        document.body.addEventListener(\"mousedown\", onClick, false);\n\n        return () => {\n            document.body.removeEventListener(\"mousedown\", onClick, false);\n        };\n    }, [onClick]);\n\n    return <div ref={ref}>{props.children}</div>;\n}\n\nClickHandler.defaultProps = {\n    onClickInside: () => { },\n    onClickOutside: () => { }\n};\n\nexport default ClickHandler;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ClickHandler from \"../Events/ClickHandler\";\nimport { ExitHandler } from \"react-transition-group/Transition\";\n\nimport styles from \"./Modal.module.scss\";\n\nexport interface ModalContentsProps {\n    onClickInside: Function, onClickOutside: Function, children: React.ReactNode\n}\n\nconst ModalContents = (props: ModalContentsProps) => {\n    return (\n        <div className={styles.overlay}>\n            <ClickHandler onClickInside={props.onClickInside} onClickOutside={props.onClickOutside}>\n                <section className={styles.container}>{props.children}</section>\n            </ClickHandler>\n        </div>);\n}\n\n\nexport interface ModalProps {\n    onClickInside: Function,\n    onClickOutside: Function,\n    isOpen: boolean,\n    transitionTimeout: number,\n    onExitCallback: ExitHandler<HTMLElement>,\n    children: React.ReactNode\n}\n\nconst Modal = (props: ModalProps) => {\n    const modalRoot = document.querySelector(\"#modalRoot\");\n\n    return ReactDOM.createPortal(\n        <CSSTransition\n            in={props.isOpen}\n            classNames=\"modal\"\n            timeout={props.transitionTimeout}\n            unmountOnExit\n            onExited={props.onExitCallback}>\n\n            <React.Fragment>\n                {<ModalContents\n                    {...props}\n                    onClickInside={props.onClickInside}\n                    onClickOutside={props.onClickOutside} />}\n            </React.Fragment>\n\n        </CSSTransition>,\n        modalRoot);\n}\n\nModal.defaultProps = {\n    onClickInside: () => { },\n    onClickOutside: () => { },\n    onExitCallback: () => { },\n    transitionTimeout: 300\n};\n\nexport default Modal;","import React from \"react\";\nimport styles from \"./GlasswallModal.module.scss\";\n\nfunction Header() {\n    return <header className={styles.header}>\n               <h1>Test Modal</h1>\n           </header>;\n}\n\nexport default Header;","import React from \"react\";\n\nimport styles from \"./GlasswallModal.module.scss\";\n\nfunction Body() {\n  return (\n    <div className={styles.body}>\n        <h2>Test Modal Body</h2>\n    </div>\n  );\n}\n\nexport default Body;","import React from \"react\";\nimport styles from \"./GlasswallModal.module.scss\";\n\nexport interface CloseButtonProps { closeAction: Function };\n\nfunction CloseButton(props: CloseButtonProps) {\n    return <button onClick={() => props.closeAction()} tabIndex={-1} type=\"button\" className={styles.close}></button>;\n}\n\nexport default CloseButton;","import React from \"react\";\nimport Modal from \"../common/Modal/Modal\";\n\nimport Header from \"./Header\";\nimport Body from \"./Body\";\nimport CloseButton from \"./CloseButton\";\n\nexport interface GlasswallModalProps { isOpen: boolean, onClickInside?: Function, onCloseAction: Function };\n\nconst GlasswallModal = (props: GlasswallModalProps) => {\n    return (\n        <Modal\n            isOpen={props.isOpen}\n            onClickInside={() => { }}\n            onClickOutside={props.onCloseAction}>\n\n            <Header />\n            <Body />\n            \n            <CloseButton closeAction={props.onCloseAction}/>                        \n        </Modal>\n    );\n};\n\nexport default GlasswallModal;","import classes from \"./Button.module.scss\";\nimport React from \"react\";\n\nconst Button = ({ onButtonClick, buttonId, buttonType, children }) => (\n\t<button\n\t\tonClick={onButtonClick}\n\t\tclassName={classes.button}\n\t\ttype={buttonType}\n\t\tid={buttonId}\n\t>\n\t\t{children}\n\t</button>\n);\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport Button from \"../../UI/Button/Button\";\n\nimport classes from \"./Form.module.scss\";\nimport iconUser from \"../../../assets/user-icon.svg\";\nimport iconPass from \"../../../assets/password-icon.svg\";\n\nconst Form = () => {\n\tconst [emailValue, setEmailValue] = useState(\"\");\n\tconst [passValue, setPassValue] = useState(\"\");\n\n\tconst submitHandler = (evt) => {\n\t\tevt.preventDefault();\n\t\tconsole.log(\"Submitted\");\n\t};\n\treturn (\n\t\t<section className={classes.form}>\n\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t<div>\n\t\t\t\t\t<label htmlFor=\"email\" />\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tplaceholder=\"Email address\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundImage: `url(${iconUser})`,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvalue={emailValue}\n\t\t\t\t\t\tonChange={(evt) => {\n\t\t\t\t\t\t\tsetEmailValue(evt.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label htmlFor=\"password\" />\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundImage: `url(${iconPass})`,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvalue={passValue}\n\t\t\t\t\t\tonChange={(evt) => {\n\t\t\t\t\t\t\tsetPassValue(evt.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<p className={classes.linkTerms}>\n\t\t\t\t\tBy logging in you agree to the <a href=\"/\">terms of use</a>\n\t\t\t\t</p>\n\t\t\t\t<Button buttonType={\"submit\"}>Log In</Button>\n\t\t\t</form>\n\t\t\t<p className={classes.rePassLink}>\n\t\t\t\t<a href=\"/\">Forgotten your password?</a>\n\t\t\t</p>\n\t\t</section>\n\t);\n};\n\nexport default Form;\n","import React from \"react\";\nimport classes from \"./Login.module.scss\";\nimport GlasswallLogo from \"../../GlasswallLogo/GlasswallLogo\";\nimport Form from \"../Form/Form\";\n\nconst login = ({ onCloseAction }) => {\n\treturn (\n\t\t<section className={classes.login} target=\"_blank\">\n\t\t\t<GlasswallLogo className={classes.logo} />\n\t\t\t<Form />\n\t\t\t<button onClick={onCloseAction}>Close page</button>\n\t\t</section>\n\t);\n};\n\nexport default login;\n","import React, { useState } from \"react\";\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tLink,\n} from \"react-router-dom\";\n\nimport {\n\tNavBar,\n\tNav,\n\tNavButton,\n\tExpandButton,\n\tNavSpacer,\n} from \"./components/GlasswallNav/GlasswallNav\";\nimport Main from \"./components/Main/Main\";\nimport SplashScreenView from \"./views/SplashScreenView/SplashScreenView\";\nimport GlasswallModal from \"./components/GlasswallModal/GlasswallModal\";\nimport Login from \"./components/Auth/Login/Login\";\n\nimport styles from \"./App.module.scss\";\n\nconst App = () => {\n\tconst [showSplashScreen, setShowSplashScreen] = useState(true);\n\n\tconst [navExpanded, setNavExpanded] = useState(true);\n\tconst [modalIsOpen, setModalIsOpen] = useState(false);\n\tconst [loginPageIsOpen, setLoginPageIsOpen] = useState(false);\n\n\treturn (\n\t\t<div className={styles.app}>\n\t\t\t<div className={styles.mainContainer}>\n\t\t\t\t{showSplashScreen && (\n\t\t\t\t\t<SplashScreenView\n\t\t\t\t\t\thideSplashScreen={() => setShowSplashScreen(false)}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\n\t\t\t\t{loginPageIsOpen && (\n\t\t\t\t\t<Login onCloseAction={() => setLoginPageIsOpen(false)} />\n\t\t\t\t)}\n\n\t\t\t\t{!showSplashScreen && !loginPageIsOpen && (\n\t\t\t\t\t<Router>\n\t\t\t\t\t\t<NavBar expanded={navExpanded} logo>\n\t\t\t\t\t\t\t<Nav expanded={navExpanded}>\n\t\t\t\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t\t\t\t<NavButton>Home</NavButton>\n\t\t\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t\t\t\t<NavSpacer />\n\n\t\t\t\t\t\t\t\t<Link to=\"/about\">\n\t\t\t\t\t\t\t\t\t<NavButton>About</NavButton>\n\t\t\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t\t\t\t<Link to=\"/contact\">\n\t\t\t\t\t\t\t\t\t<NavButton>Contact</NavButton>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Nav>\n\n\t\t\t\t\t\t\t<Nav expanded={navExpanded} bottom>\n\t\t\t\t\t\t\t\t<NavButton clickHandler={() => setModalIsOpen(true)}>\n\t\t\t\t\t\t\t\t\tModal\n\t\t\t\t\t\t\t\t</NavButton>\n\n\t\t\t\t\t\t\t\t<NavButton clickHandler={() => setShowSplashScreen(true)}>\n\t\t\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t\t\t</NavButton>\n\n\t\t\t\t\t\t\t\t<NavButton clickHandler={() => setLoginPageIsOpen(true)}>\n\t\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t\t</NavButton>\n\t\t\t\t\t\t\t</Nav>\n\n\t\t\t\t\t\t\t<ExpandButton\n\t\t\t\t\t\t\t\texpanded={navExpanded}\n\t\t\t\t\t\t\t\tclickHandler={() => setNavExpanded(!navExpanded)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</NavBar>\n\n\t\t\t\t\t\t<Main\n\t\t\t\t\t\t\texpanded={navExpanded}\n\t\t\t\t\t\t\tshowTitle\n\t\t\t\t\t\t\ttitle=\"Glasswall React App\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t\t\t<div>Home</div>\n\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t<Route path=\"/about\">\n\t\t\t\t\t\t\t\t\t<div>About</div>\n\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t<Route path=\"/contact\">\n\t\t\t\t\t\t\t\t\t<div>Contact</div>\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</Main>\n\n\t\t\t\t\t\t<GlasswallModal\n\t\t\t\t\t\t\tisOpen={modalIsOpen}\n\t\t\t\t\t\t\tonCloseAction={() => setModalIsOpen(false)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Router>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.scss\";\nimport \"./normalize.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}