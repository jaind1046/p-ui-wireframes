name: CI

on:
  pull_request:
    branches:
      - master
      - develop

jobs:
  ci-build:
    runs-on: ubuntu-latest
    env:
      working-directory: ./proto-app

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1

      - name: Installation ‚è≥
        run: yarn install
        working-directory: ${{env.working-directory}}

      - name: Test üß™
        run: yarn test
        working-directory: ${{env.working-directory}}

      - name: Build üß±
        run: yarn build-ghpages
        working-directory: ${{env.working-directory}}
  # helm-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Fetch history
  #       run: git fetch --prune --unshallow

  #     - name: Run chart-testing (lint)
  #       id: lint
  #       uses: helm/chart-testing-action@v1.0.0
  #       with:
  #         command: lint

  #     - name: Create kind cluster
  #       uses: helm/kind-action@v1.0.0
  #       # Only build a kind cluster if there are chart changes to test.
  #       if: steps.lint.outputs.changed == 'true'

  #     - name: Run chart-testing (install)
  #       if: steps.lint.outputs.changed == 'true'
  #       uses: helm/chart-testing-action@v1.0.0
  #       with:
  #         command: install

  #     - name: Install chart
  #       if: steps.lint.outputs.changed == 'true'
  #       run: |
  #         kubectl create namespace icap
  #         helm install icap-management-portal ./kube --namespace icap
  #     - name: List pods
  #       if: steps.lint.outputs.changed == 'true'
  #       run: |
  #         kubectl get pods --all-namespaces
  #         kubectl get services --all-namespaces
  #     - name: Wait for app
  #       if: steps.lint.outputs.changed == 'true'
  #       run: |
  #         kubectl get pods -n icap -l app=icap-management-portal
  #         kubectl wait --for=condition=ready pod -n icap -l app=icap-management-portal --timeout=120s
  #     - name: Port Forward to Service
  #       if: steps.lint.outputs.changed == 'true'
  #       run: "kubectl port-forward -n icap service/icap-management-portal-service 8081:80 &"

  #     - name: Test App
  #       if: steps.lint.outputs.changed == 'true'
  #       run: |
  #         curl -v localhost:8081
